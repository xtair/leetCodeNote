class Solution {
    public int[] twoSum(int[] nums, int target) {
        //利用Map Hash 特性用 O（1）时间获取key跟对应的value。
        Map<Integer, Integer> map = new HashMap<>();
        for (int i = 0; i < nums.length;i++) {
            if (map.containsKey(target - nums[i]))
                return new int[] {i, map.get(target - nums[i])};
            map.put(nums[i], i);
        }
        return null;
    }

    // sorted list provided
    public ListNode mergeTwoLists(ListNode list1, ListNode list2) {
        ListNode dummy = new ListNode(-100);
        ListNode tail = dummy;
        while (list1 != null && list2 != null) {
            if (list1.val < list2.val) {
                tail.next = list1;
                list1 = list1.next;
            } else {
                tail.next =list2;
                list2 = list2.next;
            }
            tail = tail.next;
        }
        tail.next = (list1 != null) ? list1 : list2;
        return dummy.next;
    }
}

